const Announce=require("../model/announce.model"),Townhall=require("../model/townhall.model"),Proposal=require("../model/proposal.model"),moment=require("moment"),{Web3Storage:Web3Storage}=require("web3.storage"),pinataSDK=require("@pinata/sdk"),fs=require("fs"),{Blob:Blob}=require("buffer");async function createProposal(t,e,a){try{let a={};a.slug=t.body.slug,a.creator=t.body._id,a.cid=t.body.cid,a.result={},t.body.data.f_start_date_at&&t.body.data.f_start_time_at&&t.body.data.f_end_date_at&&t.body.data.f_end_time_at&&(a.f_start_at=await makeDate(t.body.data.f_start_date_at,t.body.data.f_start_time_at),a.f_end_at=await makeDate(t.body.data.f_end_date_at,t.body.data.f_end_time_at)),new Proposal(Object.assign(a,t.body.data,{created_at:new Date})).save().then((t=>{e.json({proposal:t})}))}catch(t){console.log("api/controller/announce.controller/createBroadcast"+t)}}function makeDate(t,e){return`${t.split("T")[0]}T${e.HH}:${e.mm}:00.000Z`}function groupByVoteOption(t,e){let a=[];return t.map((t=>{let o={};o.option=t,o.amount=0,e.map((e=>{e.option==t&&(o.amount+=e.balance,o.symbol=e.symbol)})),a.push(o)})),a.sort((function(t,e){return e.amount-t.amount})),a}async function refreshProposalStatus(){try{(await Proposal.find({$or:[{status:0},{status:1}]}).exec()).map((async t=>{let e=new Date,a=60*e.getTimezoneOffset()*1e3,o=e.getTime()-a,s=60*moment().utcOffset(t.timezone.offset).utcOffset()*1e3;if(t.s_start_at){let e=new Date(t.s_start_at).getTime()-s,a=new Date(t.s_end_at).getTime()-s;if(e-o>0)t.status=0;else{if(t.s_voters.length>0){let e=await groupByVoteOption(t.s_options,t.s_voters);t.s_result=e}t.status=o>a?2:1}}else{let e=new Date(t.f_start_at).getTime()-s,a=new Date(t.f_end_at).getTime()-s;if(e-o>0)t.status=0;else{if(t.voters.length>0){let e=await groupByVoteOption(t.options,t.voters);t.result=e}if(o>a)if(t.s_start_date_at&&t.s_start_time_at&&t.s_end_date_at&&t.s_end_time_at){t.s_start_at=await makeDate(t.s_start_date_at,t.s_start_time_at),t.s_end_at=await makeDate(t.s_end_date_at,t.s_end_time_at),t.s_voters=[],t.s_result=[];let e=[];for(var r=0;r<2;r++)e.push(t.result[r].option);t.s_options=e,t.status=0}else t.status=2;else t.status=1}}await t.save()}))}catch(t){console.log("api/controller/announce.controller/refreshProposalStatus"+t)}}async function getProposalList(t,e,a){try{await refreshProposalStatus();let a={};a.slug=t.body.slug,t.body.index>-1&&(a.status=t.body.index),Proposal.find(a).populate("creator").exec().then((t=>{e.json({list:t})}))}catch(t){console.log("api/controller/announce.controller/getAnnouncementList"+t)}}async function getProposalData(t,e,a){try{Proposal.findById(t.body._id).populate("creator").exec().then((t=>{e.json({proposal:t})}))}catch(t){console.log("api/controller/proposal.controller/getProposalData"+t)}}async function sendVote(t,e,a){try{await Proposal.findByIdAndUpdate(t.body._id,{$push:{voters:{$each:t.body.data}}}).exec(),await refreshProposalStatus(),e.json({updated:!0})}catch(t){console.log("api/controller/proposal.controller/sendVote"+t)}}async function deleteProposal(t,e,a){try{Proposal.deleteOne({_id:t.body._id}).exec().then((()=>{e.json({})}))}catch(t){console.log("api/controller/proposal.controller/"+t)}}async function sample(t,e,a){try{await user.save(),User.find({}).then((t=>{console.log(t)}));e.json({list:"okay"})}catch(t){console.log("api/controller/proposal.controller/"+t)}}module.exports={createProposal:createProposal,getProposalList:getProposalList,getProposalData:getProposalData,deleteProposal:deleteProposal,sendVote:sendVote};